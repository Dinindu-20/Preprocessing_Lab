# -*- coding: utf-8 -*-
"""200638P.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1I--ZsbePoJpRcIldonOngkguCaXXMdsU
"""

# Data Pre-processing Lab Assignment

# **----- Import all libraries here -----**

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

# Import the dataset into a data frame -----------------------------------
dataset = pd.read_csv('diabetes.csv')


dataset_x = dataset.drop(columns=["Outcome","Patient_ID"])
dataset_y = dataset["Outcome"]

#Getting a description of all cloumns
print(dataset_x.describe(include="all"))

"""**As we can see there is negative values in pregnacies, blood pressure and Glucose. Let's change them.**"""

dataset.loc[dataset['Pregncies'] < 0, 'Pregncies'] = 0
dataset.loc[dataset['Glucose'] <= 0, 'Glucose'] = int(dataset['Glucose'].median())
dataset.loc[dataset['BloodPressure'] <= 0, 'BloodPressure'] = int(dataset['BloodPressure'].median())

sns.pairplot(dataset,hue='Outcome')

#looking for the duplicated values
dataset_x.duplicated().sum()

#droping the duplicate values
dataset.drop_duplicates(subset = ['Pregncies','Glucose','BloodPressure','SkinThickness','Insulin','BMI','DiabetesPedigreeFunction','Age'])

#count of the 'Nan' values in each colomns
percent_nan_in_each_col = dataset_x.isna().sum()
print(percent_nan_in_each_col)

#cheking outliers of each colomns

for column in dataset_x:
    plt.figure()
    dataset_x.boxplot([column])

#As we can see, there are huge outliers in Age, DiabetesPedigreeFunction,BMI, Insulin , BloodPressure colomns.
#So, we are going to fill 'Nan' values with median. But in other colomns we can use mean.
replace_with_median = ['Age','DiabetesPedigreeFunction','BMI','Insulin','BloodPressure']
replace_with_mean = ['Pregncies', 'Glucose', 'SkinThickness']

for feature in replace_with_mean:
    dataset.fillna(dataset[feature].mean(), inplace=True)
    

for feature in replace_with_median:
    dataset.fillna(dataset[feature].median(), inplace=True)

percent_nan_in_each_col = dataset.isna().sum()
print(percent_nan_in_each_col)

#Geeting rid of outliers of highly outliered colomns
columns = ['Age','DiabetesPedigreeFunction','BMI','Insulin','BloodPressure']
for col in columns:
    upper_val = dataset[col].quantile(0.80)
    down_val = dataset[col].quantile(0.20)
    dataset[col] = np.where(dataset[col] < down_val, down_val,dataset[col])
    dataset[col] = np.where(dataset[col] > upper_val, upper_val,dataset[col])

#checking colomns after clearing out liers

for column in dataset:
    plt.figure()
    dataset.boxplot([column])

# Write the pre-processed dataset into a csv file ( You can just delete the under part if you want)  --------------------------------
pre_processed_dataset = dataset
#  This is the file name, you can just alter the name here.
student_id = "200638P.csv"

# we add the data to csv file here
pre_processed_dataset.to_csv(student_id, index=False)

df1 = pd.read_csv("200638P.csv")


